=begin
#Siteimprove API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AccessibilityApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AccessibilityApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AccessibilityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccessibilityApi' do
    it 'should create an instance of AccessibilityApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AccessibilityApi)
    end
  end

  # unit tests for sites_site_id_accessibility_decision_issues_chapter_check_id_subtype_pages_get
  # Get decisions on issues for specific pages from accessibility
  # Get decisions on issues for specific pages from accessibility
  # @param site_id Id for specific site.
  # @param chapter WCAG issue chapter for the problem
  # @param check_id id for the Accessibility check. {1, 2, ... 135} Lookup: https://support.siteimprove.com/hc/en-gb/articles/360002273918
  # @param subtype Decision type (approved, cant fix, etc.)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForIgnoredIssueDecisionList]
  describe 'sites_site_id_accessibility_decision_issues_chapter_check_id_subtype_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_decision_issues_get
  # Get decisions on issues from accessibility
  # Get decisions on issues from accessibility
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [IgnoredIssueDecisionList]
  describe 'sites_site_id_accessibility_decision_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_decision_items_chapter_check_id_subtype_hash_pages_get
  # Get decisions on items for specific pages from accessibility
  # Get decisions on items for specific pages from accessibility
  # @param site_id Id for specific site.
  # @param chapter WCAG issue chapter for the problem
  # @param check_id id for the Accessibility check. {1, 2, ... 135} Lookup: https://support.siteimprove.com/hc/en-gb/articles/360002273918
  # @param subtype Decision type (approved, cant fix, etc.)
  # @param hash MD5 hash identifying the item the decision is made for
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [IgnoredItemPageList]
  describe 'sites_site_id_accessibility_decision_items_chapter_check_id_subtype_hash_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_decision_items_get
  # Get decisions on items from accessibility
  # Get decisions on items from accessibility
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [IgnoredItemDecisionList]
  describe 'sites_site_id_accessibility_decision_items_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_issues_get
  # Get issues from accessibility
  # Retrieves the issues from accessibility; how many pages that have the Issue; the guideline; its conformance level (A, AA, or AAA); its severity; links to pages having the Issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [IssueList1]
  describe 'sites_site_id_accessibility_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_issues_success_criterion_check_id_pages_get
  # Get pages with this issue from accessibility
  # Retrieves pages with this issue from accessibility. The issue is identified by its check_id.
  # @param site_id Id for specific site.
  # @param success_criterion WCAG success criterion key (e.g. 2.4.9). Lookup: https://www.w3.org/TR/WCAG20/ 
  # @param check_id id for the Accessibility check. {1, 2, ... 135} Lookup: https://support.siteimprove.com/hc/en-gb/articles/360002273918
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SpecificIssuePageList]
  describe 'sites_site_id_accessibility_issues_success_criterion_check_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_issues_success_criterion_check_id_progress_history_get
  # Get progress for this issue from accessibility
  # Retrieves issue progress for accessibility. Returns a list of how many many instances of this issue is present on the site, how many pages have this issue, how many pages the issue has been ignored on, and how many pages in total the site has had over time.
  # @param site_id Id for specific site.
  # @param success_criterion WCAG success criterion key (e.g. 2.4.9). Lookup: https://www.w3.org/TR/WCAG20/ 
  # @param check_id id for the Accessibility check. {1, 2, ... 135} Lookup: https://support.siteimprove.com/hc/en-gb/articles/360002273918
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @return [AccessibilityHistoryIssueInstancesList]
  describe 'sites_site_id_accessibility_issues_success_criterion_check_id_progress_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_overview_groups_get
  # Get overview of groups for accessibility
  # Retrieve overview of groups for accessibility. Returns the name of the group; its id; the number of pages in the group; the number of A, AA, AAA, and PDF issues for pages handled by this group
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [AccessibilityGroupsOverviewList]
  describe 'sites_site_id_accessibility_overview_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_overview_groups_group_id_users_get
  # Get list of users for this group
  # Retrieves list of users for this group. Returns id for user, user name, and user email
  # @param site_id Id for specific site.
  # @param group_id Id for specific group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [AccessibilityGroupPersonList]
  describe 'sites_site_id_accessibility_overview_groups_group_id_users_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_overview_progress_instances_history_get
  # Get progress for all instances from accessibility
  # Retrieves overall instance progress for accessibility. Returns a list of how many total instances are present on the site, as well as how many total pages are present. All of the data is filterable by conformance level (A, AA, AAA), severity, and responsibility.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @option opts [String] :roles Roles to be included in the result.
  # @option opts [String] :severities Severities to be included in the result.
  # @return [IHistoryInstancesValuableList]
  describe 'sites_site_id_accessibility_overview_progress_instances_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_overview_progress_issues_history_get
  # Get progress for all issues from accessibility
  # Retrieves overall issue progress for accessibility. Returns a list of how many total issues are present on the site, how many issues are excluded, as well as how many total pages are present. All of the data is filterable by conformance level (A, AA, AAA), severity, and responsibility.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @option opts [String] :roles Roles to be included in the result.
  # @option opts [String] :severities Severities to be included in the result.
  # @return [IHistoryIssuesValuableList]
  describe 'sites_site_id_accessibility_overview_progress_issues_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_overview_summary_get
  # Get summary for accessibility
  # Retrieves issue overview for accessibility, according to conformance level (a, aa, aaa) and severity. I.e. up to 9 items. Items that don&#39;t contain any issues are not returned
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SummaryIssueList]
  describe 'sites_site_id_accessibility_overview_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_pages_get
  # Get HTML pages from accessibility
  # Retrieves HTML pages from accessibility with the number of A, AA, and AAA issues on the page
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageList]
  describe 'sites_site_id_accessibility_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_pages_page_id_issues_get
  # Get overview of issues for page in accessibility
  # Retrieves the number of issues within a conformance level * severity set
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [IssueSummaryPageList]
  describe 'sites_site_id_accessibility_pages_page_id_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_css_css_id_pages_using_css_get
  # Get HTML pages referencing specific CSS stylesheet
  # Retrieves the HTML pages referencing specific CSS stylesheet. Returns name of HTML page, its url, and usage.
  # @param site_id Id for specific site.
  # @param css_id Id of the CSS file
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageCssList]
  describe 'sites_site_id_accessibility_validation_css_css_id_pages_using_css_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_css_get
  # Get W3C CSS error report from accessibility
  # Retrieves CSS error report from accesibility. Contains the number of CSS errors for each CSS stylesheet used on the site
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [CssValidationList]
  describe 'sites_site_id_accessibility_validation_css_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_html_get
  # Get W3C HTML error report from accessibility
  # Retrieves W3C HTML error report from accesibility. Returns name of HTML page, its url, and usage.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [HtmlValidationPageList]
  describe 'sites_site_id_accessibility_validation_html_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_pdf_get
  # Get report on PDF errors from accessibility
  # Retrieves PDF documents from accessibility. Contains the PDF documents referred on the site, whether they&#39;re tagged, contains text, and their errors
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [DocumentWithErrorList1]
  describe 'sites_site_id_accessibility_validation_pdf_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_pdf_link_id_issues_get
  # Get errors for specific PDF document
  # List of errors for the PDF document
  # @param site_id Id for specific site.
  # @param link_id Id of a specific link/URL.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [DocumentErrorDetailsList]
  describe 'sites_site_id_accessibility_validation_pdf_link_id_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_accessibility_validation_pdf_pdf_id_pages_using_pdf_get
  # Get HTML pages referring to specific PDF document
  # List of HTML pages on the site that refers to the PDF document
  # @param site_id Id for specific site.
  # @param pdf_id id of the PDF document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_accessibility_validation_pdf_pdf_id_pages_using_pdf_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
