=begin
#Siteimprove API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::QualityAssuranceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'QualityAssuranceApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::QualityAssuranceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of QualityAssuranceApi' do
    it 'should create an instance of QualityAssuranceApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::QualityAssuranceApi)
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_capture_tags_get
  # Get capture tags from inventory
  # All capture tags and the pages on which they have been detected
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [BodyTagNameList]
  describe 'sites_site_id_quality_assurance_inventory_capture_tags_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_capture_tags_tag_name_id_occurrences_get
  # Get capture tags occurrences from inventory
  # The occurrences of a specific capture tag.
  # @param site_id Id for specific site.
  # @param tag_name_id Id for specific tag.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [BodyTagNameContentList]
  describe 'sites_site_id_quality_assurance_inventory_capture_tags_tag_name_id_occurrences_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_capture_tags_tag_name_id_values_tag_value_id_pages_get
  # Get capture tags occurrences&#39; pages from inventory
  # The pages for a specific capture tag occurence.
  # @param site_id Id for specific site.
  # @param tag_name_id Id for specific tag.
  # @param tag_value_id Id for specific tag value.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_capture_tags_tag_name_id_values_tag_value_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_css_css_id_pages_with_css_get
  # Get pages with css from css inventory
  # All pages with the detected phone number.
  # @param site_id Id for specific site.
  # @param css_id Id of the CSS file
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_css_css_id_pages_with_css_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_css_css_id_pages_without_css_get
  # Get pages without css from css inventory
  # All pages with the detected phone number.
  # @param site_id Id for specific site.
  # @param css_id Id of the CSS file
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_css_css_id_pages_without_css_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_css_get
  # Get css assets from inventory
  # All linked CSS assets and the pages on which they have been detected on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [CssFileList]
  describe 'sites_site_id_quality_assurance_inventory_css_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_documents_get
  # Get documents from inventory
  # A full list of all detected documents.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [DocumentList]
  describe 'sites_site_id_quality_assurance_inventory_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_email_addresses_email_address_id_pages_get
  # Get pages with email from inventory
  # All pages with the detected phone number.
  # @param site_id Id for specific site.
  # @param email_address_id Id for specific email address.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_email_addresses_email_address_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_email_addresses_get
  # Get email addresses from inventory
  # All email addresses that have been detected on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [EmailAddressList1]
  describe 'sites_site_id_quality_assurance_inventory_email_addresses_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_history_get
  # Get history from inventory
  # Inventory history with the total count after each crawl.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [InventoryHistoryItemList]
  describe 'sites_site_id_quality_assurance_inventory_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_link_texts_get
  # Get link texts from inventory
  # Text used in relation to links.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkTextList1]
  describe 'sites_site_id_quality_assurance_inventory_link_texts_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_link_texts_text_id_pages_get
  # Get pages with link text from inventory
  # All pages with the link text.
  # @param site_id Id for specific site.
  # @param text_id Id for specific (link) text.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageForLinktextList]
  describe 'sites_site_id_quality_assurance_inventory_link_texts_text_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_links_get
  # Get links from inventory
  # All links detected on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkList]
  describe 'sites_site_id_quality_assurance_inventory_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_links_link_id_documents_get
  # Get documents with link
  # All documents containing this particular link.
  # @param site_id Id for specific site.
  # @param link_id Id of a specific link/URL.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [DocumentWithLinkList]
  describe 'sites_site_id_quality_assurance_inventory_links_link_id_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_links_link_id_pages_get
  # Get pages with link
  # All pages with the detected link.
  # @param site_id Id for specific site.
  # @param link_id Id of a specific link/URL.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_links_link_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_media_get
  # Get media files from inventory
  # All media files on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MediaList]
  describe 'sites_site_id_quality_assurance_inventory_media_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_meta_tags_get
  # Get meta tags from inventory
  # All meta tags found anywhere on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTagNameList1]
  describe 'sites_site_id_quality_assurance_inventory_meta_tags_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_meta_tags_meta_name_id_contents_get
  # Get meta tag contents
  # All occurrences of the specific meta tag.
  # @param site_id Id for specific site.
  # @param meta_name_id Id for specific meta name.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTagNameContentList]
  describe 'sites_site_id_quality_assurance_inventory_meta_tags_meta_name_id_contents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_meta_tags_meta_name_id_contents_meta_content_id_pages_get
  # Get meta tag pages
  # All pages with the detected phone number
  # @param site_id Id for specific site.
  # @param meta_name_id Id for specific meta name.
  # @param meta_content_id Id for specific meta content.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_meta_tags_meta_name_id_contents_meta_content_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_pages_get
  # Get pages from inventory
  # HTML pages with referring page information and the date each page was first detected.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @option opts [String] :url Url of the site
  # @return [PageList1]
  describe 'sites_site_id_quality_assurance_inventory_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_pages_page_id_referring_pages_get
  # Get referring pages for page in inventory
  # All referring pages to this specific page.
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageForPageList]
  describe 'sites_site_id_quality_assurance_inventory_pages_page_id_referring_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_personal_id_numbers_get
  # Get personal id numbers from inventory
  # During the crawl a check is made for identification numbers relating to where the account is located. For example, for US accounts we will look for Social Security numbers. All potential identification numbers that may have been accidentally published on the website are collected.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [PersonalIdNumberList]
  describe 'sites_site_id_quality_assurance_inventory_personal_id_numbers_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_personal_id_numbers_personal_id_number_id_documents_get
  # Get documents with personal id numbers from inventory
  # All documents containing this specific personal id number.
  # @param site_id Id for specific site.
  # @param personal_id_number_id Id for specific personal id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PersonalIdNumberDocumentList]
  describe 'sites_site_id_quality_assurance_inventory_personal_id_numbers_personal_id_number_id_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_personal_id_numbers_personal_id_number_id_pages_get
  # Get pages with personal id numbers from inventory
  # All pages containing this specific personal id number.
  # @param site_id Id for specific site.
  # @param personal_id_number_id Id for specific personal id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageForPersonalIdNumberList]
  describe 'sites_site_id_quality_assurance_inventory_personal_id_numbers_personal_id_number_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_phone_numbers_get
  # Get phone numbers from inventory
  # Phone numbers and the pages on which they have been detected - useful when numbers need to be updated or removed from the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [PhoneNumberList1]
  describe 'sites_site_id_quality_assurance_inventory_phone_numbers_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_phone_numbers_phone_number_id_pages_get
  # Get pages with phone number from inventory
  # All pages with the detected phone number
  # @param site_id Id for specific site.
  # @param phone_number_id Id for specific phone number.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_phone_numbers_phone_number_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_scripts_get
  # Get java scripts from inventory
  # JavaScript files and the pages on which they have been detected – especially useful if specific scripts should be present on all pages.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [JavaScriptList]
  describe 'sites_site_id_quality_assurance_inventory_scripts_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_scripts_script_id_pages_with_script_get
  # Get pages with java script from inventory
  # All pages with the specific JavaScript file.
  # @param site_id Id for specific site.
  # @param script_id Id for specific script.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_scripts_script_id_pages_with_script_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_scripts_script_id_pages_without_script_get
  # Get pages without java script from inventory
  # All pages without this specific JavaScript file.
  # @param site_id Id for specific site.
  # @param script_id Id for specific script.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_inventory_scripts_script_id_pages_without_script_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_inventory_trademarks_trademark_id_pages_get
  # Get pages with trademark from inventory
  # All pages containing this specific trademark.
  # @param site_id Id for specific site.
  # @param trademark_id Id for specific trademark.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [WithContentPageList]
  describe 'sites_site_id_quality_assurance_inventory_trademarks_trademark_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_broken_links_get
  # Get broken links
  # All unique links that are broken, and the pages where they are located - Broken links can detrimentally affect the user experience of your visitors.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [BrokenPageLinkList1]
  describe 'sites_site_id_quality_assurance_links_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_broken_links_in_documents_get
  # Get broken links in documents
  # All unique links that are broken, and the pages where they are located - Broken links can detrimentally affect the user experience of your visitors.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [BrokenDocumentLinkList]
  describe 'sites_site_id_quality_assurance_links_broken_links_in_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_broken_links_in_documents_link_id_documents_get
  # Get documents with broken link
  # Get all the documents that contains this specific broken link.
  # @param site_id Id for specific site.
  # @param link_id Id of a specific link/URL.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [DocumentWithSpecificBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_broken_links_in_documents_link_id_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_broken_links_link_id_pages_get
  # Get pages with broken link
  # All pages containing this specific broken link.
  # @param site_id Id for specific site.
  # @param link_id Id of a specific link/URL.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_broken_links_link_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_dismissed_links_get
  # Get dismissed links
  # Dismissed links will not be taken in consideration as broken link and no longer affect your DCI score.  Include also links that have been ignored – errors with these links will no longer be highlighted within QA. 
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [DismissedPageLinkList]
  describe 'sites_site_id_quality_assurance_links_dismissed_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_documents_with_broken_links_document_id_broken_links_get
  # Get all broken links in document
  # Get all broken links in the specific document.
  # @param site_id Id for specific site.
  # @param document_id Id for specific document.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [DocumentBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_documents_with_broken_links_document_id_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_documents_with_broken_links_document_id_pages_get
  # Get pages with broken links
  # All pages where broken links have been found - Broken links detrimentally affect the user experience for your visitors.
  # @param site_id Id for specific site.
  # @param document_id Id for specific document.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ReferringPageList]
  describe 'sites_site_id_quality_assurance_links_documents_with_broken_links_document_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_documents_with_broken_links_get
  # Get documents with broken links
  # All PDFs where broken links have been found - Broken links detrimentally affect the user experience for your visitors.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [DocumentWithBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_documents_with_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_history_get
  # Get historical data for links
  # A series of historical data points showing the link status (pages with broken links, etc) over the selected period.  When viewing historical data the resolution of the data points will be dependent on the period specified. For single-day periods the resolution will be hours. For periods less than 62 days (approximately two months) the resolution will be days. For longer periods the resolution will be months.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [LinkHistoryItemList]
  describe 'sites_site_id_quality_assurance_links_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_ignored_links_get
  # Get ignored links
  # Links that have been ignored – errors with these links will no longer be highlighted within QA.  Noe
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkDecisionList]
  describe 'sites_site_id_quality_assurance_links_ignored_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_pages_with_broken_links_get
  # Get pages with broken links
  # All pages containing this specific broken link.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_pages_with_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_pages_with_broken_links_page_id_broken_links_get
  # Get broken links from page with broken links
  # All broken links from this specific page containing broken links.
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageBrokenLinkList]
  describe 'sites_site_id_quality_assurance_links_pages_with_broken_links_page_id_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_unsafe_domains_domain_id_documents_get
  # Get documents with unsafe domain from links
  # All documents containing with links to this unsafe domain.
  # @param site_id Id for specific site.
  # @param domain_id Id for specific domain.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [UnsafeLinkPdfList]
  describe 'sites_site_id_quality_assurance_links_unsafe_domains_domain_id_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_unsafe_domains_domain_id_pages_get
  # Get pages with links to unsafe domain
  # All pages containing with links to this unsafe domain.
  # @param site_id Id for specific site.
  # @param domain_id Id for specific domain.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [UnsafeLinkPageList]
  describe 'sites_site_id_quality_assurance_links_unsafe_domains_domain_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_links_unsafe_domains_get
  # Get links to unsafe domains
  # Links to unsafe domains.  Domains that have been identified as potentially risky by Google&#39;s Safe Browsing API. An advisory is provided by Google in regards to Safe Browsing.  If users go to potentially risky domains through links on your site, this can reflect negatively on your site&#39;s trustworthiness.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [UnsafeDomainList1]
  describe 'sites_site_id_quality_assurance_links_unsafe_domains_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_get
  # Get check history from crawls
  # Full history of all checks that have been run for the selected site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryItemList]
  describe 'sites_site_id_quality_assurance_overview_check_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_broken_links_get
  # Get broken links from check in check history 
  # Get all broken links on pages detected at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryBrokenLinkList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_broken_links_in_documents_get
  # Get broken links in documents from check history
  # Get all broken links in documents detected at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryBrokenLinkList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_broken_links_in_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_known_links_get
  # Get known links from check in check history
  # Get all known links on pages detected at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryLinkList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_known_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_known_pages_get
  # Get known pages from check in check history
  # Get all known pages visited at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryPageList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_known_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_new_links_get
  # Get new links from check in check history
  # Get all new links visited at this specific check
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryLinkList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_new_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_new_pages_get
  # Get new pages from check in check history
  # Get all new pages visited at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryPageList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_new_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_removed_links_get
  # Get removed links from check in check history
  # Get all former known links that were no longer present at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryLinkList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_removed_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_check_history_history_id_removed_pages_get
  # Get removed pages from check in check history
  # Get all former known pages that were no longer present at this specific check.
  # @param site_id Id for specific site.
  # @param history_id Id for specific history point - Ie. a specific point in time where checks where run for the site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CheckHistoryPageList]
  describe 'sites_site_id_quality_assurance_overview_check_history_history_id_removed_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_groups_get
  # Get quality assurance groups
  # Groups are used to display information for specific sections of the website. Only groups that are visible under your profile are displayed.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [GroupDetailsList1]
  describe 'sites_site_id_quality_assurance_overview_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_groups_group_id_users_get
  # Get users from group
  # Get users belonging to this specific group.
  # @param site_id Id for specific site.
  # @param group_id Id for specific group.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [QualityAssuranceGroupPersonList]
  describe 'sites_site_id_quality_assurance_overview_groups_group_id_users_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_priority_pages_get
  # Get priority pages
  # Pages with errors have a page score to enable you to target those pages where corrections will have the most positive effect for your users.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PriorityPageList]
  describe 'sites_site_id_quality_assurance_overview_priority_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_overview_summary_get
  # Get summary for quality assurance
  # Get summary of QA issues detected on the site.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [OverviewSummary]
  describe 'sites_site_id_quality_assurance_overview_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_accepted_words_get
  # Get accepted readability words
  # Accepted words are words that can&#39;t be changed or words that should not be altered irrespective of length or number of syllables.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [AcceptedReadabilityWordList]
  describe 'sites_site_id_quality_assurance_readability_accepted_words_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_automated_readability_excluded_pages_get
  # Get excluded pages for automated readability
  # All pages that have been excluded from the automated readability test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageAutomatedReadabilityList]
  describe 'sites_site_id_quality_assurance_readability_tests_automated_readability_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_automated_readability_pages_get
  # Get readability pages for automated readability
  # All pages where a readability score has been calculated for the automated readability test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageAutomatedReadabilityList]
  describe 'sites_site_id_quality_assurance_readability_tests_automated_readability_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_automated_readability_scores_bucket_id_pages_get
  # Get pages with readability score for automated readability
  # Pages that relates to the reading ability bucket for the automated readability test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageAutomatedReadabilityList1]
  describe 'sites_site_id_quality_assurance_readability_tests_automated_readability_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_automated_readability_scores_get
  # Get readability scores for automated readability
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the automated readability test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketAutomatedReadabilityList]
  describe 'sites_site_id_quality_assurance_readability_tests_automated_readability_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_coleman_liau_excluded_pages_get
  # Get excluded pages for coleman liau
  # All pages that have been excluded from the coleman liau test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageColemanLiauList]
  describe 'sites_site_id_quality_assurance_readability_tests_coleman_liau_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_coleman_liau_pages_get
  # Get readability pages for coleman liau
  # All pages where a readability score has been calculated for the coleman liau test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageColemanLiauList]
  describe 'sites_site_id_quality_assurance_readability_tests_coleman_liau_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_coleman_liau_scores_bucket_id_pages_get
  # Get pages with readability score for coleman liau
  # Pages that relates to the reading ability bucket for coleman liau.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageColemanLiauList1]
  describe 'sites_site_id_quality_assurance_readability_tests_coleman_liau_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_coleman_liau_scores_get
  # Get readability scores for coleman liau
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the coleman liau test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketColemanLiauList]
  describe 'sites_site_id_quality_assurance_readability_tests_coleman_liau_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_excluded_pages_get
  # Get excluded pages for flesch kincaid grade level
  # All pages that have been excluded from the flesch kincaid grade level test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageFleschKincaidGradeLevelList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_pages_get
  # Get readability pages for flesch kincaid grade level
  # All pages where a readability score has been calculated for the flesch kincade grade level test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageFleschKincaidGradeLevelList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_scores_bucket_id_pages_get
  # Get pages with readability score for flesch kincaid grade level
  # Pages that relates to the reading ability bucket for the flesch kincaid grade level test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageFleschKincaidGradeLevelList1]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_scores_get
  # Get readability scores for flesch kincaid grade level
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the flesch kincade grade level test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketFleschKincaidGradeLevelList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_grade_level_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_excluded_pages_get
  # Get excluded pages for flesch kincaid reading ease
  # All pages that have been excluded from the flesch kincaid reading ease test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageFleschKincaidReadingEaseList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_pages_get
  # Get readability pages for flesch kincaid reading ease
  # All pages where a readability score has been calculated for the flesch kincade reading ease test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageFleschKincaidReadingEaseList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_scores_bucket_id_pages_get
  # Get pages with readability score for flesch kincaid reading ease
  # Pages that relates to the reading ability bucket for the flesch kincaid reading ease test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageFleschKincaidReadingEaseList1]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_scores_get
  # Get readability scores for flesch kincaid reading ease
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the flesch kincade reading ease test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketFleschKincaidReadingEaseList]
  describe 'sites_site_id_quality_assurance_readability_tests_flesch_kincaid_reading_ease_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_gunning_fog_excluded_pages_get
  # Get excluded pages for gunning fog
  # All pages that have been excluded from the gunning fog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageGunningFogList]
  describe 'sites_site_id_quality_assurance_readability_tests_gunning_fog_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_gunning_fog_pages_get
  # Get readability pages for gunning fog
  # All pages where a readability score has been calculated for the gunning fog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageGunningFogList]
  describe 'sites_site_id_quality_assurance_readability_tests_gunning_fog_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_gunning_fog_scores_bucket_id_pages_get
  # Get pages with readability score for gunning fog
  # Pages that relates to the reading ability bucket for the gunning fog test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageGunningFogList1]
  describe 'sites_site_id_quality_assurance_readability_tests_gunning_fog_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_gunning_fog_scores_get
  # Get readability scores for gunning fog
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the gunning fog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketGunningFogList]
  describe 'sites_site_id_quality_assurance_readability_tests_gunning_fog_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_lix_excluded_pages_get
  # Get excluded pages for lix
  # All pages that have been excluded from the lix test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageLixList]
  describe 'sites_site_id_quality_assurance_readability_tests_lix_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_lix_pages_get
  # Get readability pages for lix
  # All pages where a readability score has been calculated for the lix test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageLixList]
  describe 'sites_site_id_quality_assurance_readability_tests_lix_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_lix_scores_bucket_id_pages_get
  # Get pages with readability score for lix
  # Pages that relates to the reading ability bucket for the lix test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageLixList1]
  describe 'sites_site_id_quality_assurance_readability_tests_lix_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_lix_scores_get
  # Get readability scores for lix
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the lix test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketLixList]
  describe 'sites_site_id_quality_assurance_readability_tests_lix_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_smog_excluded_pages_get
  # Get excluded pages for smog
  # All pages that have been excluded from the smog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiIgnoredReadabilityPageSmogList]
  describe 'sites_site_id_quality_assurance_readability_tests_smog_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_smog_pages_get
  # Get readability pages for smog
  # All pages where a readability score has been calculated for the smog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ApiReadabilityPageSmogList]
  describe 'sites_site_id_quality_assurance_readability_tests_smog_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_smog_scores_bucket_id_pages_get
  # Get pages with readability score for smog
  # Pages that relates to the reading ability bucket for the smog test.
  # @param site_id Id for specific site.
  # @param bucket_id Id of the readability bucket.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityPageSmogList1]
  describe 'sites_site_id_quality_assurance_readability_tests_smog_scores_bucket_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_readability_tests_smog_scores_get
  # Get readability scores for smog
  # Pages are placed into levels depending on the difficulty level of the content that relates to the reading ability of a person in full time education based on the smog test.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ApiReadabilityBucketSmogList]
  describe 'sites_site_id_quality_assurance_readability_tests_smog_scores_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_approved_words_get
  # Get approved words from spelling
  # Words that we have found and that has been accepted by users.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [AcceptedWordList]
  describe 'sites_site_id_quality_assurance_spelling_approved_words_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_approved_words_word_id_pages_get
  # Get pages with approved words from spelling
  # Get pages containing this specific word that has been approved by a user.
  # @param site_id Id for specific site.
  # @param word_id Id for specific word.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForWordList]
  describe 'sites_site_id_quality_assurance_spelling_approved_words_word_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_history_get
  # Get historical data for spelling
  # A series of historical data points showing the status of misspellings and potential misspellings over the selected period.  When viewing historical data the resolution of the data points will be dependent on the period specified. For single-day periods the resolution will be hours. For periods less than 62 days (approximately two months) the resolution will be days. For longer periods the resolution will be months.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SpellingHistoryItemList]
  describe 'sites_site_id_quality_assurance_spelling_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_languages_get
  # Get languages from spelling
  # All languages detected on the site and the percentage of content written in each language, both at site and page level.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [LanguageList1]
  describe 'sites_site_id_quality_assurance_spelling_languages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_languages_language_code_pages_get
  # Get pages with language from spelling
  # Get pages written in this specific language.
  # @param site_id Id for specific site.
  # @param language_code Language code for specific country (ie. \&quot;en\&quot;, \&quot;de\&quot; etc.)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [LanguagePageList]
  describe 'sites_site_id_quality_assurance_spelling_languages_language_code_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_misspellings_get
  # Get misspellings from spelling
  # Words that could not be found in the system&#39;s dictionary or words that have been confirmed as misspellings by an administrator.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [ConfirmedMisspellingV2List]
  describe 'sites_site_id_quality_assurance_spelling_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_misspellings_word_id_pages_get
  # Get pages with misspelling from spelling
  # Get pages containing this specific misspelling.
  # @param site_id Id for specific site.
  # @param word_id Id for specific word.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForWordList]
  describe 'sites_site_id_quality_assurance_spelling_misspellings_word_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_pages_get
  # Get pages from spelling
  # All pages where either misspellings or potential misspellings have been detected. Misspellings are confirmed as errors where potential misspellings need to be reviewed.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithMisspellingsList]
  describe 'sites_site_id_quality_assurance_spelling_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_pages_page_id_misspellings_get
  # Get misspellings for a page from spelling
  # Get misspellings for this specific page.
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [MisspellingOnPageList]
  describe 'sites_site_id_quality_assurance_spelling_pages_page_id_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_pages_page_id_potential_misspellings_get
  # Get potential misspelling for a page from spelling
  # This endpoint is deprecated. Get potential misspellings for this specific page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PagePotentialMisspellingList]
  describe 'sites_site_id_quality_assurance_spelling_pages_page_id_potential_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_pages_page_id_words_to_review_get
  # Get words to review for a page from spelling
  # Get words to review for this specific page.
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SpellingReviewOnPageList]
  describe 'sites_site_id_quality_assurance_spelling_pages_page_id_words_to_review_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_potential_misspellings_get
  # Get potential misspellings from spelling
  # This endpoint is deprecated. Potential misspellings are words on the site, which are not found in the dictionary, and have not been automatically confirmed as misspellings by the Quality Assurance service.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [PotentialMisspellingList]
  describe 'sites_site_id_quality_assurance_spelling_potential_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_potential_misspellings_word_id_pages_get
  # Get pages with potential misspelling from spelling
  # This endpoint is deprecated. Get pages containing this specific potential misspelling.
  # @param site_id Id for specific site.
  # @param word_id Id for specific word.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForWordList]
  describe 'sites_site_id_quality_assurance_spelling_potential_misspellings_word_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_words_to_review_get
  # Get words to review from spelling
  # Words to review are words on the site, which are not found in the dictionary, and have not been automatically confirmed as misspellings by the Quality Assurance service.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [SpellingReviewList]
  describe 'sites_site_id_quality_assurance_spelling_words_to_review_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_quality_assurance_spelling_words_to_review_word_id_pages_get
  # Get pages with words to review from spelling
  # Get pages containing this specific word to review.  
  # @param site_id Id for specific site.
  # @param word_id Id for specific word.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PageForWordList]
  describe 'sites_site_id_quality_assurance_spelling_words_to_review_word_id_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
