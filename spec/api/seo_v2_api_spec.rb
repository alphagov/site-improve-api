=begin
#Siteimprove API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SiteImproveApiClient::SeoV2Api
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SeoV2Api' do
  before do
    # run before each test
    @api_instance = SiteImproveApiClient::SeoV2Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SeoV2Api' do
    it 'should create an instance of SeoV2Api' do
      expect(@api_instance).to be_instance_of(SiteImproveApiClient::SeoV2Api)
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_get
  # Get activity plans
  # Get all SEO activity plans on this site
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [ActivityPlanList]
  describe 'sites_site_id_seov2_activity_plans_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_get
  # Get competitors for the specific activity plan
  # Get all competitors for the activity plan
  # @param site_id Id for specific site.
  # @param activity_plan_id Id for specific activity plan
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [CompetitorAnalysisVisibilityScoreTrendList]
  describe 'sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_history_get
  # Get competitors search engine visibility historically
  # Get yours and your competitors search engine visibility historically for the activity plan
  # @param site_id Id for specific site.
  # @param activity_plan_id Id for specific activity plan
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @return [VisibilityScoreHistoryItemList]
  describe 'sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_positions_get
  # Get the position distribution of competitors
  # Get the position distribution of your website and your competitors
  # @param site_id Id for specific site.
  # @param activity_plan_id Id for specific activity plan
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [PositionSpreadList]
  describe 'sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_positions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_positions_history_get
  # Get the position distribution for your competitors historically
  # Get the historical position distribution of your website and your competitors
  # @param site_id Id for specific site.
  # @param activity_plan_id Id for specific activity plan
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :range The range of the keywords
  # @return [PositionSpreadHistoryItemList]
  describe 'sites_site_id_seov2_activity_plans_plans_activity_plan_id_competitors_positions_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_plans_activity_plan_id_history_get
  # Get historical metrics for the activity plan
  # Get historical metrics for the activity plan
  # @param site_id Id for specific site.
  # @param activity_plan_id Id for specific activity plan
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @return [ActivityPlanHistoryItemList]
  describe 'sites_site_id_seov2_activity_plans_plans_activity_plan_id_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_activity_plans_summary_get
  # Get overall statistics for all activity plans
  # Get overall statistics for all activity plans on your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [ActivityPlanHighlights]
  describe 'sites_site_id_seov2_activity_plans_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_content_optimization_keywords_get
  # Get content optimization keywords
  # Get content optimization keywords on your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activity_plan_id Id for specific activity plan
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [ContentOptimizationKeywordList]
  describe 'sites_site_id_seov2_content_optimization_keywords_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_content_optimization_keywords_summary_get
  # Get overall statistics for content optimization keywords
  # Get overall statistics for content optimization keywords on your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activity_plan_id Id for specific activity plan
  # @return [ContentOptimizationKeywordHighlights]
  describe 'sites_site_id_seov2_content_optimization_keywords_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_details_get
  # Get overall broken links stats
  # Get the overall broken links stats for your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [InternalBrokenSeoLinksInfo]
  describe 'sites_site_id_seov2_issues_broken_links_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_entry_pages_details_get
  # Get overall broken links stats for entry pages
  # Get overall broken links stats for entry pages
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [InternalBrokenEntryPagesSeoLinksInfo]
  describe 'sites_site_id_seov2_issues_broken_links_entry_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_entry_pages_get
  # Get broken links on entry pages
  # Get broken links on entry pages for your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [InternalBrokenSeoLinkList]
  describe 'sites_site_id_seov2_issues_broken_links_entry_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_entry_pages_history_get
  # Get the occurrences of broken links on entry pages historically
  # Get the occurrences of broken links on entry pages historically
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_broken_links_entry_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_get
  # Get broken links
  # Get the broken links from issues
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [InternalBrokenSeoLinkList]
  describe 'sites_site_id_seov2_issues_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_broken_links_history_get
  # Get the occurrences of broken links historically
  # Get the occurrences of broken links historically
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_broken_links_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_canonical_urls_details_get
  # Get overall stats for canonical issue
  # Get overall stats for canonical issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [CanonicalUrlsInfo]
  describe 'sites_site_id_seov2_issues_canonical_urls_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_canonical_urls_get
  # Get pages not linking to the canonical page
  # Get pages not linking to the canonical page
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithCanonicalList]
  describe 'sites_site_id_seov2_issues_canonical_urls_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_canonical_urls_history_get
  # Get historical occurrences of canonical issue
  # Get historical occurrences of canonical issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_canonical_urls_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_code_text_ratio_details_get
  # Get overall stats of code to text ratio issue
  # Get overall stats of code to text ratio issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesCodeTextRatioInfo]
  describe 'sites_site_id_seov2_issues_code_text_ratio_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_code_text_ratio_get
  # Get pages for code to text ratio issue
  # Pages with text-to-code ratio below 30%
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithLowCodeTextRatioList]
  describe 'sites_site_id_seov2_issues_code_text_ratio_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_code_text_ratio_history_get
  # Get historical occurrences of code to text ratio issue
  # Get historical occurrences of code to text ratio issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_code_text_ratio_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_compression_used_details_get
  # Get compression used issue
  # Get compression used issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [CompressionUsed]
  describe 'sites_site_id_seov2_issues_compression_used_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_correct404s_details_get
  # Get overall stats for the correct 404 issue
  # Get overall stats for the correct 404 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [LinksStatusCodeCorrect404Info]
  describe 'sites_site_id_seov2_issues_correct404s_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_correct404s_get
  # Get links for the correct 404 issue
  # Links should return correctly 404 when it&#39;s a 404 and not be a \&quot;soft\&quot; 404.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [Link404WithIncorrectStatusCodeList]
  describe 'sites_site_id_seov2_issues_correct404s_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_correct404s_history_get
  # Get historical occurrences of correct 404 issue
  # Get historical occurrences of correct 404 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_correct404s_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_css_validation_details_get
  # Get overall stats for the css validation issue
  # Get overall stats for the css validation issue. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [CssValidationErrorInfo]
  describe 'sites_site_id_seov2_issues_css_validation_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_css_validation_get
  # Get stylesheets for the css validation issue
  # Get all stylesheets not passing css validation. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [CssValidationErrorList]
  describe 'sites_site_id_seov2_issues_css_validation_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_css_validation_history_get
  # Get historical occurrences of css validation issue
  # Get historical occurrences of css validation issue. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_css_validation_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_dead_end_pages_details_get
  # Get overall stats for the dead end pages issue
  # Get overall stats for the dead end pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [DeadEndPagesInfo]
  describe 'sites_site_id_seov2_issues_dead_end_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_dead_end_pages_get
  # Get dead end pages issue
  # Get all the pages with no internal links
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [DeadEndPageList]
  describe 'sites_site_id_seov2_issues_dead_end_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_dead_end_pages_history_get
  # Get historical occurrences of dead end pages issue
  # Get historical occurrences of dead end pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_dead_end_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_desktop_speed_details_get
  # Get desktop speed issue
  # Get desktop speed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [DesktopSpeed]
  describe 'sites_site_id_seov2_issues_desktop_speed_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_desktop_speed_history_get
  # Get the desktop speed score historically
  # Get the desktop speed score historically
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [DesktopSpeedHistoryItemList]
  describe 'sites_site_id_seov2_issues_desktop_speed_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_description_details_get
  # Get overall stats for duplicate meta description issue
  # Get overall stats for duplicate meta description issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [DuplicateMetaDescriptionInfo]
  describe 'sites_site_id_seov2_issues_duplicate_description_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_description_get
  # Get duplicate description issue
  # Get all duplicate meta descriptions
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaDescriptionValueList]
  describe 'sites_site_id_seov2_issues_duplicate_description_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_description_history_get
  # Get historical occurrences of duplicate description issue
  # Get historical occurrences of duplicate meta description issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_duplicate_description_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_page_title_details_get
  # Get overall stats for duplicate page title issue
  # Get overall stats for duplicate page title issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [DuplicateMetaTitleInfo]
  describe 'sites_site_id_seov2_issues_duplicate_page_title_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_page_title_get
  # Get duplicate page title issue
  # Get all the duplicate page titles
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [DuplicateMetaTitleValueList]
  describe 'sites_site_id_seov2_issues_duplicate_page_title_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_duplicate_page_title_history_get
  # Get historical occurrences of duplicate page title issue
  # Get historical occurrences of duplicate page title issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_duplicate_page_title_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_empty_h1_details_get
  # Get overall stats for empty H1 issue
  # Get overall stats for empty H1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [H1EmptyInfo]
  describe 'sites_site_id_seov2_issues_empty_h1_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_empty_h1_get
  # Get empty H1 issue
  # Get all pages with an empty H1
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [H1IssuePageList]
  describe 'sites_site_id_seov2_issues_empty_h1_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_empty_h1_history_get
  # Get historical occurrences of empty H1 issue
  # Get historical occurrences of empty H1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_empty_h1_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_fontsize_legibility_details_get
  # Get font size legibility issue
  # Get font size legibility issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [FontsizeLegibility]
  describe 'sites_site_id_seov2_issues_fontsize_legibility_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_get
  # Get issues
  # Get all SEO issues on your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :category The category filter
  # @option opts [String] :complexity The complexity filter
  # @option opts [Boolean] :fixed The fixed filter
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueWithRecommendationList]
  describe 'sites_site_id_seov2_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_html_validation_details_get
  # Get overall stats for html validation issue
  # Get overall stats for html validation issue. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [HtmlValidationSeoPagesInfo]
  describe 'sites_site_id_seov2_issues_html_validation_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_html_validation_get
  # Get html validation issue
  # Get all the pages which do not pass html validation. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [HtmlValidationSeoPageList]
  describe 'sites_site_id_seov2_issues_html_validation_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_html_validation_history_get
  # Get historical occurrences of html validation issue
  # Get historical occurrences of html validation issue. This check is deprecated from November 2019. The data is still available but won&#39;t get updated.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_html_validation_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_alt_attribute_details_get
  # Get overall stats for image alt attribute issue
  # Get overall stats for image alt attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ImagesWithMissingImageAltAttributeInfo]
  describe 'sites_site_id_seov2_issues_image_alt_attribute_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_alt_attribute_get
  # Get image alt attribute issue
  # Get all pages where an image is missing an alt attribute
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithMissingImageAltAttributeList]
  describe 'sites_site_id_seov2_issues_image_alt_attribute_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_alt_attribute_history_get
  # Get historical occurrences of image alt attribute issue
  # Get historical occurrences of image alt attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_image_alt_attribute_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_empty_alt_attribute_details_get
  # Get overall stats for image empty alt attribute issue
  # Get overall stats for image empty alt attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ImagesWithEmptyImageAltAttributeInfo]
  describe 'sites_site_id_seov2_issues_image_empty_alt_attribute_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_empty_alt_attribute_get
  # Get image empty alt attribute issue
  # Get all pages with images that has an empty attribute
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithEmptyImageAltAttributeList]
  describe 'sites_site_id_seov2_issues_image_empty_alt_attribute_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_empty_alt_attribute_history_get
  # Get historical occurrences of image empty alt attribute issue
  # Get historical occurrences of image empty alt attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_image_empty_alt_attribute_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_width_height_attribute_details_get
  # Get overall stats for image width height attribute issue
  # Get overall stats for image width height attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ImagesWithMissingWidthHeightAttributeInfo]
  describe 'sites_site_id_seov2_issues_image_width_height_attribute_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_width_height_attribute_get
  # Get image with height attribute issue
  # Get all pages with an image missing width and/or height attributes
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithMissingImageWidthHeightAttributeList]
  describe 'sites_site_id_seov2_issues_image_width_height_attribute_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_image_width_height_attribute_history_get
  # Get historical occurrences of image width height attribute issue
  # Get historical occurrences of image width height attribute issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_image_width_height_attribute_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_images1mb_details_get
  # Get overall stats for images over 1mb issue
  # Get overall stats for images over 1mb issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ImagesLargerThan1MbInfo]
  describe 'sites_site_id_seov2_issues_images1mb_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_images1mb_get
  # Get images over 1mb issue
  # Get all images that are larger than 1 mb
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [ImagesLargerThan1MbList]
  describe 'sites_site_id_seov2_issues_images1mb_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_images1mb_history_get
  # Get historical occurrences of images over 1mb issue
  # Get historical occurrences of images over 1mb issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_images1mb_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_links_to_unsafe_domains_details_get
  # Get overall stats for links to unsafe domains issue
  # Get overall stats for links to unsafe domains issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [UnsafeDomainsSeoInfo]
  describe 'sites_site_id_seov2_issues_links_to_unsafe_domains_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_links_to_unsafe_domains_get
  # Get links to unsafe domains issue
  # Get all links which link to a domain considered unsafe
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [UnsafeDomainSeoLinkList]
  describe 'sites_site_id_seov2_issues_links_to_unsafe_domains_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_links_to_unsafe_domains_history_get
  # Get historical occurrences of unsafe domains issue
  # Get historical occurrences of unsafe domains issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_links_to_unsafe_domains_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_load_time_details_get
  # Get overall stats for load time issue
  # Get overall stats for load time issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [SlowSeoPagesInfo]
  describe 'sites_site_id_seov2_issues_load_time_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_load_time_get
  # Get load time issue
  # Get all pages with loading time exceeding 2 seconds
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SlowSeoPageList]
  describe 'sites_site_id_seov2_issues_load_time_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_load_time_history_get
  # Get historical occurrences of load time issue
  # Get historical occurrences of load time issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_load_time_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_sentences_details_get
  # Get overall stats for the long sentences issue
  # Get overall stats for the long sentences issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [LongSentencePagesInfo]
  describe 'sites_site_id_seov2_issues_long_sentences_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_sentences_get
  # Get long sentences issue
  # Get all pages with sentences longer than 20 words.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [LongSentencePageList]
  describe 'sites_site_id_seov2_issues_long_sentences_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_sentences_history_get
  # Get historical occurrences of long sentences issue
  # Get historical occurrences of long sentences issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_long_sentences_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_urls_details_get
  # Get overall stats for long urls issue
  # Get overall stats for long urls issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithLongUrlsInfo]
  describe 'sites_site_id_seov2_issues_long_urls_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_urls_get
  # Get long urls issue
  # Get all pages with long urls 
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithLongUrlList]
  describe 'sites_site_id_seov2_issues_long_urls_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_long_urls_history_get
  # Get historical occurrences of long urls issue
  # Get historical occurrences of long urls issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_long_urls_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_many_internal_links_details_get
  # Get overall stats for the many internal links issue
  # Get overall stats for the many internal links issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ManyInternalLinksInfo]
  describe 'sites_site_id_seov2_issues_many_internal_links_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_many_internal_links_get
  # Get many internal links issue
  # Get all pages with 60 or more internal links
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ManyInternalLinksPageList]
  describe 'sites_site_id_seov2_issues_many_internal_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_many_internal_links_history_get
  # Get historical occurrences of many internal links issue
  # Get historical occurrences of many internal links issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_many_internal_links_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_empty_details_get
  # Get overall stats for meta description empty issue
  # Get overall stats for meta description empty issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaDescriptionEmptyInfo]
  describe 'sites_site_id_seov2_issues_meta_desc_empty_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_empty_get
  # Get meta description empty issue
  # Get all pages with an empty meta description
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [MetaDescriptionPageList]
  describe 'sites_site_id_seov2_issues_meta_desc_empty_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_empty_history_get
  # Get historical occurrences of meta description empty issue
  # Get historical occurrences of meta description empty issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_desc_empty_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_long_details_get
  # Get overall stats for meta description too long issue
  # Get overall stats for meta description too long issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaDescriptionTooLongInfo]
  describe 'sites_site_id_seov2_issues_meta_desc_long_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_long_get
  # Get meta description too long issue
  # Get all pages with meta descriptions that are too long
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaDescriptionValueList]
  describe 'sites_site_id_seov2_issues_meta_desc_long_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_long_history_get
  # Get historical occurrences of meta description too long issue
  # Get historical occurrences of meta description too long issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_desc_long_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_missing_details_get
  # Get overall stats for meta description missing issue
  # Get overall stats for meta description missing issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaDescriptionMissingInfo]
  describe 'sites_site_id_seov2_issues_meta_desc_missing_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_missing_get
  # Get meta description empty issue
  # Get all pages with a missing meta description
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [MetaDescriptionPageList]
  describe 'sites_site_id_seov2_issues_meta_desc_missing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_missing_history_get
  # Get historical occurrences of meta description missing issue
  # Get historical occurrences of meta description missing issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_desc_missing_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_multiple_details_get
  # Get overall stats for multiple meta description issue
  # Get overall stats for multiple meta description issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaDescriptionMultipleInfo]
  describe 'sites_site_id_seov2_issues_meta_desc_multiple_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_multiple_get
  # Get multiple meta description issue
  # Get all pages with multiple meta descriptions
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [MultipleMetaDescriptionPageList]
  describe 'sites_site_id_seov2_issues_meta_desc_multiple_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_multiple_history_get
  # Get historical occurrences of multiple meta description issue
  # Get historical occurrences of multiple meta description issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_desc_multiple_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_short_details_get
  # Get overall stats for meta description too short issue
  # Get overall stats for meta description too short issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaDescriptionTooShortInfo]
  describe 'sites_site_id_seov2_issues_meta_desc_short_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_short_get
  # Get meta description too short issue
  # Get all pages with meta description that are too short
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaDescriptionValueList]
  describe 'sites_site_id_seov2_issues_meta_desc_short_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_desc_short_history_get
  # Get historical occurrences of meta description too short issue
  # Get historical occurrences of meta description too short issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_desc_short_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_empty_details_get
  # Get overall stats for meta title empty issue
  # Get overall stats for meta title empty issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaTitleEmptyInfo]
  describe 'sites_site_id_seov2_issues_meta_title_empty_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_empty_get
  # Get meta title empty issue
  # Get all pages with an empty meta title
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTitlePageList]
  describe 'sites_site_id_seov2_issues_meta_title_empty_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_empty_history_get
  # Get historical occurrences of meta title empty issue
  # Get historical occurrences of meta title empty issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_title_empty_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_long_details_get
  # Get overall stats for meta title too long issue
  # Get overall stats for meta title too long issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaTitleTooLongInfo]
  describe 'sites_site_id_seov2_issues_meta_title_long_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_long_get
  # Get meta title too long issue
  # Get all pages with a meta title that is too long
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTitleValueList]
  describe 'sites_site_id_seov2_issues_meta_title_long_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_long_history_get
  # Get historical occurrences of meta title too long issue
  # Get historical occurrences of meta title too long issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_title_long_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_missing_details_get
  # Get overall stats for meta title missing issue
  # Get overall stats for meta title missing issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaTitleMissingInfo]
  describe 'sites_site_id_seov2_issues_meta_title_missing_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_missing_get
  # Get meta title missing issue
  # Get all pages with a missing meta title
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTitlePageList]
  describe 'sites_site_id_seov2_issues_meta_title_missing_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_missing_history_get
  # Get historical occurrences of meta title missing issue
  # Get historical occurrences of meta title missing issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_title_missing_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_multiple_details_get
  # Get overall stats for multiple meta title issue
  # Get overall stats for multiple meta title issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaTitleMultipleInfo]
  describe 'sites_site_id_seov2_issues_meta_title_multiple_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_multiple_get
  # Get multiple meta title issue
  # Get all pages with multiple meta titles
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [MultipleMetaTitlePageList]
  describe 'sites_site_id_seov2_issues_meta_title_multiple_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_multiple_history_get
  # Get historical occurrences for multiple meta title issue
  # Get historical occurrences for multiple meta title issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_title_multiple_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_short_details_get
  # Get overall stats for meta title too short issue
  # Get overall stats for meta title too short issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MetaTitleTooShortInfo]
  describe 'sites_site_id_seov2_issues_meta_title_short_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_short_get
  # Get meta title too short issue
  # Get all pages with meta titles that are too short
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [MetaTitleValueList]
  describe 'sites_site_id_seov2_issues_meta_title_short_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_meta_title_short_history_get
  # Get historical occurrences of meta title too short issue
  # Get historical occurrences of meta title too short issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_meta_title_short_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_missing_h1_details_get
  # Get overall stats for missing h1 issue
  # Get overall stats for missing h1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [H1MissingInfo]
  describe 'sites_site_id_seov2_issues_missing_h1_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_missing_h1_get
  # Get missing h1 issue
  # Get all pages without a h1
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [H1IssuePageList]
  describe 'sites_site_id_seov2_issues_missing_h1_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_missing_h1_history_get
  # Get historical occurrences of missing h1 issue
  # Get historical occurrences of missing h1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_missing_h1_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_missing_robots_details_get
  # Get missing robots issue
  # Get missing robots issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [RobotsTxtExist]
  describe 'sites_site_id_seov2_issues_missing_robots_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_missing_sitemap_details_get
  # Get missing sitemap issue
  # Get missing sitemap issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [SitemapExist]
  describe 'sites_site_id_seov2_issues_missing_sitemap_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspelling_entry_pages_details_get
  # Get overall stats for misspellings on entry pages issue
  # Get overall stats for misspellings on entry pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MisspellingsInfo]
  describe 'sites_site_id_seov2_issues_misspelling_entry_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspelling_entry_pages_get
  # Get misspellings on entry pages issue
  # Get all entry pages with a misspelling
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [MisspellingList]
  describe 'sites_site_id_seov2_issues_misspelling_entry_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspelling_entry_pages_history_get
  # Get historical occurrences of misspelling on entry pages issue
  # Get historical occurrences of misspelling on entry pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_misspelling_entry_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspellings_details_get
  # Get overall stats for misspellings issue
  # Get overall stats for misspellings issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [MisspellingsInfo]
  describe 'sites_site_id_seov2_issues_misspellings_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspellings_get
  # Get misspellings issue
  # Get all misspellings found on the website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [MisspellingList]
  describe 'sites_site_id_seov2_issues_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_misspellings_history_get
  # Get historical occurrences of misspelling issue
  # Get historical occurrences of misspelling issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_misspellings_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_mobile_friendly_details_get
  # Get mobile friendly issue
  # Get mobile friendly issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [MobileFriendly]
  describe 'sites_site_id_seov2_issues_mobile_friendly_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_mobile_speed_details_get
  # Get mobile speed issue
  # Get mobile speed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [MobileSpeed]
  describe 'sites_site_id_seov2_issues_mobile_speed_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_mobile_speed_history_get
  # Get the mobile speed score historically
  # Get the mobile speed score historically
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [MobileSpeedHistoryItemList]
  describe 'sites_site_id_seov2_issues_mobile_speed_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_mobile_viewport_details_get
  # Get mobile viewport issue
  # Get mobile viewport issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [MobileViewport]
  describe 'sites_site_id_seov2_issues_mobile_viewport_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_multiple_h1_details_get
  # Get overall stats for multiple h1 issue
  # Get overall stats for multiple h1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [H1MultipleInfo]
  describe 'sites_site_id_seov2_issues_multiple_h1_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_multiple_h1_get
  # Get multiple h1 issue
  # Get all pages with multiple h1s
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [H1IssuePageList]
  describe 'sites_site_id_seov2_issues_multiple_h1_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_multiple_h1_history_get
  # Get historical occurrences for multiple h1 issue
  # Get historical occurrences for multiple h1 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_multiple_h1_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_navigation_depth_details_get
  # Get overall stats for navigation depth issue
  # Get overall stats for navigation depth issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithHighNavigationDepthInfo]
  describe 'sites_site_id_seov2_issues_navigation_depth_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_navigation_depth_get
  # Get navigation depth issue
  # Get all pages with high navigation depth
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithHighNavigationDepthList]
  describe 'sites_site_id_seov2_issues_navigation_depth_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_navigation_depth_history_get
  # Get historical occurrences of navigation depth issue
  # Get historical occurrences of navigation depth issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_navigation_depth_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_new_pages_details_get
  # Get new pages issue
  # Get new pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [NewPagesInfo]
  describe 'sites_site_id_seov2_issues_new_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_new_pages_history_get
  # Get historical occurrences of new pages issue
  # Get historical occurrences of new pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_new_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_nofollow_pages_details_get
  # Get overall stats for nofollow pages issue
  # Get overall stats for nofollow pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [NoFollowPagesInfo]
  describe 'sites_site_id_seov2_issues_nofollow_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_nofollow_pages_get
  # Get nofollow pages issue
  # Get all pages with a nofollow tag
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [NoFollowPageList]
  describe 'sites_site_id_seov2_issues_nofollow_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_nofollow_pages_history_get
  # Get historical occurrences of nofollow pages issue
  # Get historical occurrences of nofollow pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_nofollow_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_noindex_pages_details_get
  # Get overall stats for noindex pages issue
  # Get overall stats for noindex pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [NoIndexPagesInfo]
  describe 'sites_site_id_seov2_issues_noindex_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_noindex_pages_get
  # Get noindex pages
  # Get all pages with a noindex tag
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [NoIndexPageList]
  describe 'sites_site_id_seov2_issues_noindex_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_noindex_pages_history_get
  # Get historical occurrences of noindex pages issue
  # Get historical occurrences of noindex pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_noindex_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_open_graph_tag_pages_details_get
  # Get overall stats for open graph tag pages issue
  # Get overall stats for open graph tag pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [OpenGraphTagsPagesInfo]
  describe 'sites_site_id_seov2_issues_open_graph_tag_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_open_graph_tag_pages_get
  # Get open graph tag pages issue
  # Get all pages without open graph tags
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [OpenGraphTagsPageList]
  describe 'sites_site_id_seov2_issues_open_graph_tag_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_open_graph_tag_pages_history_get
  # Get historical occurrences of open graph tag pages issue
  # Get historical occurrences of open graph tag pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_open_graph_tag_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_page_size_details_get
  # Get overall stats for page size issue
  # Get overall stats for page size issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PageSizeInfo]
  describe 'sites_site_id_seov2_issues_page_size_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_page_size_get
  # Get page size issue
  # Get all pages with a size over 1 mb
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageTooLargeList]
  describe 'sites_site_id_seov2_issues_page_size_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_page_size_history_get
  # Get historical occurrences of page size issue
  # Get historical occurrences of page size issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_page_size_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_broken_links_details_get
  # Get overall stats for pages with broken links issue
  # Get overall stats for pages with broken links issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithBrokenSeoLinksInfo]
  describe 'sites_site_id_seov2_issues_pages_with_broken_links_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_broken_links_get
  # Get pages with broken links issue
  # Get all pages with a broken link
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithBrokenSeoLinkList]
  describe 'sites_site_id_seov2_issues_pages_with_broken_links_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_broken_links_history_get
  # Get historical occurrences of page with broken links issue
  # Get historical occurrences of page with broken links issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_pages_with_broken_links_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_frames_details_get
  # Get overall stats for pages with frames issue
  # Get overall stats for pages with frames issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithFramesInfo]
  describe 'sites_site_id_seov2_issues_pages_with_frames_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_frames_get
  # Get pages with frames issue
  # Get all pages with a frame or iframe
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithFramesList]
  describe 'sites_site_id_seov2_issues_pages_with_frames_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_frames_history_get
  # Get historical occurrences of page with frames issue
  # Get historical occurrences of page with frames issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_pages_with_frames_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_images1mb_details_get
  # Get overall stats for pages with images over 1mb issue
  # Get overall stats for pages with images over 1mb issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithImagesLargerThan1MbInfo]
  describe 'sites_site_id_seov2_issues_pages_with_images1mb_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_images1mb_get
  # Get pages with images over 1mb issue
  # Get all pages with an image over 1 mb
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithImagesLargerThan1MbList]
  describe 'sites_site_id_seov2_issues_pages_with_images1mb_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_images1mb_history_get
  # Get historical occurrences of page with images over 1mb issue
  # Get historical occurrences of page with images over 1mb issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_pages_with_images1mb_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_misspellings_details_get
  # Get overall stats for pages with misspellings issue
  # Get overall stats for pages with misspellings issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithMisspellingInfo]
  describe 'sites_site_id_seov2_issues_pages_with_misspellings_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_misspellings_get
  # Get pages with misspellings issue
  # Get all pages with a misspelling
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithMisspellingList]
  describe 'sites_site_id_seov2_issues_pages_with_misspellings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_pages_with_misspellings_history_get
  # Get historical occurrences of page with misspellings issue
  # Get historical occurrences of page with misspellings issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_pages_with_misspellings_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_parameterized_urls_details_get
  # Get overall stats for parameterized urls issue
  # Get overall stats for parameterized urls issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesWithParametersInfo]
  describe 'sites_site_id_seov2_issues_parameterized_urls_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_parameterized_urls_get
  # Get parameterized urls issue
  # Get all pages with a parameterized url
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithParameterList]
  describe 'sites_site_id_seov2_issues_parameterized_urls_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_parameterized_urls_history_get
  # Get historical occurrences of parameterized urls issue
  # Get historical occurrences of parameterized urls issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_parameterized_urls_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_readability_pages_score_details_get
  # Get overall stats for readability page score issue
  # Get overall stats for readability page score issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [ReadabilityScorePagesInfo]
  describe 'sites_site_id_seov2_issues_readability_pages_score_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_readability_pages_score_get
  # Get readability pages score issue
  # Get all pages with a readability score less than 70
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [ReadabilityScorePageList]
  describe 'sites_site_id_seov2_issues_readability_pages_score_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_readability_pages_score_history_get
  # Get historical occurrences of readability pages score issue
  # Get historical occurrences of readability pages score issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_readability_pages_score_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect301_details_get
  # Get overall stats for redirect 301 issue
  # Get overall stats for redirect 301 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [Redirect301PagesInfo]
  describe 'sites_site_id_seov2_issues_redirect301_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect301_get
  # Get redirect 301 issue
  # Get all pages with a 301 redirect
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [Redirect301PageList]
  describe 'sites_site_id_seov2_issues_redirect301_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect301_history_get
  # Get historical occurrences of redirect 301 issue
  # Get historical occurrences of redirect 301 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_redirect301_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_chain_details_get
  # Get overall stats for redirect chain issue
  # Get overall stats for redirect chain issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [RedirectChainPagesInfo]
  describe 'sites_site_id_seov2_issues_redirect_chain_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_chain_get
  # Get redirect chain issue
  # Get all pages with a redirect chain
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [RedirectChainPageList]
  describe 'sites_site_id_seov2_issues_redirect_chain_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_chain_history_get
  # Get historical occurrences of redirect chain issue
  # Get historical occurrences of redirect chain issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_redirect_chain_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_mixed_details_get
  # Get overall stats for redirect mixed issue
  # Get overall stats for redirect mixed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [RedirectMixedPagesInfo]
  describe 'sites_site_id_seov2_issues_redirect_mixed_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_mixed_get
  # Get redirect mixed issue
  # Get all redirect mixed pages
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [RedirectMixedPageList]
  describe 'sites_site_id_seov2_issues_redirect_mixed_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_mixed_history_get
  # Get historical occurrences of redirect mixed issue
  # Get historical occurrences of redirect mixed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_redirect_mixed_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_not301_details_get
  # Get overall stats for redirect not 301 issue
  # Get overall stats for redirect not 301 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [RedirectNot301PagesInfo]
  describe 'sites_site_id_seov2_issues_redirect_not301_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_not301_get
  # Get redirect not 301 issue
  # Get all pages with a redirect that is not 301
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [RedirectNot301PageList]
  describe 'sites_site_id_seov2_issues_redirect_not301_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_redirect_not301_history_get
  # Get historical occurrences of redirect not 301 issue
  # Get historical occurrences of redirect not 301 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_redirect_not301_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_sitemap_excluded_pages_details_get
  # Get overall stats for sitemap excluded pages issue
  # Get overall stats for sitemap excluded pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [PagesInSitemapInfo]
  describe 'sites_site_id_seov2_issues_sitemap_excluded_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_sitemap_excluded_pages_get
  # Get sitemap excluded pages issue 
  # Get all pages not included in the sitemap
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageNotInSitemapList]
  describe 'sites_site_id_seov2_issues_sitemap_excluded_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_sitemap_excluded_pages_history_get
  # Get historical occurrences of sitemap excluded pages issue
  # Get historical occurrences of sitemap excluded pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_sitemap_excluded_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_enabled_details_get
  # Get overall stats for ssl enabled issue
  # Get overall stats for ssl enabled issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [SslEnabledPagesInfo]
  describe 'sites_site_id_seov2_issues_ssl_enabled_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_enabled_get
  # Get ssl enabled issue
  # Get all pages without ssl
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SslEnabledPageList]
  describe 'sites_site_id_seov2_issues_ssl_enabled_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_enabled_history_get
  # Get historical occurrences of ssl enabled issue
  # Get historical occurrences of ssl enabled issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_ssl_enabled_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_mixed_details_get
  # Get overall stats for ssl mixed issue
  # Get overall stats for ssl mixed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [SslMixedContentPagesInfo]
  describe 'sites_site_id_seov2_issues_ssl_mixed_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_mixed_get
  # Get ssl mixed issue
  # Get all pages linking to a http link or pulling in a http resource
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SslMixedContentPageList]
  describe 'sites_site_id_seov2_issues_ssl_mixed_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_ssl_mixed_history_get
  # Get historical occurrences of ssl mixed issue
  # Get historical occurrences of ssl mixed issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_ssl_mixed_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code404_details_get
  # Get overall stats for status code 404 issue
  # Get overall stats for status code 404 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [LinksStatusCode404Info]
  describe 'sites_site_id_seov2_issues_status_code404_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code404_get
  # Get status code 404 issue
  # Get all links with status code 404
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkStatusCode404List]
  describe 'sites_site_id_seov2_issues_status_code404_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code404_history_get
  # Get historical occurrences of status code 404 issue
  # Get historical occurrences of status code 404 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_status_code404_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code4xxs_details_get
  # Get overall stats for status code 4xx issue
  # Get overall stats for status code 4xx issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [LinksStatusCode4xxInfo]
  describe 'sites_site_id_seov2_issues_status_code4xxs_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code4xxs_get
  # Get status code 4xx issue
  # Get all links with status code 4xx
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkStatusCode4xxList]
  describe 'sites_site_id_seov2_issues_status_code4xxs_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code4xxs_history_get
  # Get historical occurrences of status code 4xx issue
  # Get historical occurrences of status code 4xx issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_status_code4xxs_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code500s_details_get
  # Get overall stats for status code 500 issue
  # Get overall stats for status code 500 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [LinksStatusCode500Info]
  describe 'sites_site_id_seov2_issues_status_code500s_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code500s_get
  # Get status code 500 issue
  # Get all links with status code 500
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [LinkStatusCode500List]
  describe 'sites_site_id_seov2_issues_status_code500s_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_status_code500s_history_get
  # Get historical occurrences of status code 500 issue
  # Get historical occurrences of status code 500 issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_status_code500s_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_structured_markup_pages_details_get
  # Get overall stats for structured markup pages issue
  # Get overall stats for structured markup pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [StructuredDataMarkupPagesInfo]
  describe 'sites_site_id_seov2_issues_structured_markup_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_structured_markup_pages_get
  # Get structured markup pages issue
  # Get structured markup pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [StructuredDataMarkupPageList]
  describe 'sites_site_id_seov2_issues_structured_markup_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_structured_markup_pages_history_get
  # Get historical occurrences of structured markup pages issue
  # Get historical occurrences of structured markup pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_structured_markup_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_touchscreen_ready_details_get
  # Get touchscreen ready issue
  # Get touchscreen ready issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [TouchscreenReady]
  describe 'sites_site_id_seov2_issues_touchscreen_ready_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_unsafe_domain_details_get
  # Get unsafe domain issue
  # Get unsafe domain issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @return [UnsafeDomainSeo]
  describe 'sites_site_id_seov2_issues_unsafe_domain_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_media_details_get
  # Get overall stats for updated media issue
  # Get overall stats for updated media issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [UpdatedMediaInfo]
  describe 'sites_site_id_seov2_issues_updated_media_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_media_get
  # Get updated media issue
  # Get all media files not updated within the last year
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_id Id for specific page.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [NonUpdatedMediaList]
  describe 'sites_site_id_seov2_issues_updated_media_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_media_history_get
  # Get historical occurrences of updated media issue
  # Get historical occurrences of updated media issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_updated_media_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_pages_details_get
  # Get overall stats for updated pages issue
  # Get overall stats for updated pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [NonUpdatedPagesInfo]
  describe 'sites_site_id_seov2_issues_updated_pages_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_pages_get
  # Get updated pages issue
  # Get all pages not updated within the last year
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [NonUpdatedPageList]
  describe 'sites_site_id_seov2_issues_updated_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_updated_pages_history_get
  # Get historical occurrences of updated pages issue
  # Get historical occurrences of updated pages issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_updated_pages_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_urls_with_underscore_details_get
  # Get overall stats for urls with underscore issue
  # Get overall stats for urls with underscore issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [UrlsWithUnderscoreInfo]
  describe 'sites_site_id_seov2_issues_urls_with_underscore_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_urls_with_underscore_get
  # Get urls with underscore issue
  # Get all pages with an url that has an underscore
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [UrlWithUnderscoreList]
  describe 'sites_site_id_seov2_issues_urls_with_underscore_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_urls_with_underscore_history_get
  # Get historical occurrences of urls with underscore issue
  # Get historical occurrences of urls with underscore issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_urls_with_underscore_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_words_per_page_details_get
  # Get overall stats for words per page issue
  # Get overall stats for words per page issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @return [WordsPerPageInfo]
  describe 'sites_site_id_seov2_issues_words_per_page_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_words_per_page_get
  # Get words per page issue
  # Get all pages with word count below 500
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [PageWithLessThan500WordsList]
  describe 'sites_site_id_seov2_issues_words_per_page_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_issues_words_per_page_history_get
  # Get historical occurrences of words per page issue
  # Get historical occurrences of words per page issue
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueOccurenceHistoryItemList]
  describe 'sites_site_id_seov2_issues_words_per_page_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_keywords_get
  # Get monitored keywords
  # Get all monitored keywords
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activity_plan_id Id for specific activity plan
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @return [KeywordMonitoringKeywordList]
  describe 'sites_site_id_seov2_keywords_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_keywords_keyword_id_ranking_pages_get
  # Get ranking pages for the keyword
  # Get your website&#39;s ranking pages for the keyword
  # @param site_id Id for specific site.
  # @param keyword_id Id for specific keyword
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activity_plan_id Id for specific activity plan
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [KeywordRankingList]
  describe 'sites_site_id_seov2_keywords_keyword_id_ranking_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_overview_groups_get
  # Get SEO groups
  # Groups are used to display information for specific sections of the website. Only groups that are visible under your profile are returned.
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @return [SeoGroupDetailsList]
  describe 'sites_site_id_seov2_overview_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_overview_score_get
  # Get the SEO scores
  # Get the top category SEO scores for your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page_id Id for specific page.
  # @return [SeoScoreDetails]
  describe 'sites_site_id_seov2_overview_score_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_overview_score_history_get
  # Get the SEO scores historically
  # Get the top category SEO scores historically for your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :period Period for which to retrieve data. Default is last 7 days.  A period can be a single date, a date range, or a predefined interval. Only full dates are allowed, not individual hours. Dates are in YYYYMMDD format only.  A single date YYYYMMDD will return data for that day.  A range of dates YYYYMMDD_YYYYMMDD will retrieve data for the period where the start and end date are both fully included.  A predefined interval can be one of the following (case insensitive):   now    today      yesterday    last_seven_days    last_week    last_month    this_month    this_year
  # @return [SeoScoreHistoryItemList]
  describe 'sites_site_id_seov2_overview_score_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_pages_get
  # Get pages with issues
  # Get all pages found on your website with issues
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SeoRecommendationPageList]
  describe 'sites_site_id_seov2_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_pages_page_id_issues_get
  # Get issues for specific page
  # Get the SEO issues found for the specific page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :category The category filter
  # @option opts [String] :complexity The complexity filter
  # @option opts [Boolean] :fixed The fixed filter
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [SeoIssueWithRecommendationList]
  describe 'sites_site_id_seov2_pages_page_id_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_get
  # Get target pages for keywords
  # Get target pages for keywords on your website
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :group_id Id for specific group.
  # @option opts [Array<Integer>] :ids Return all items that is one of the listed identifiers.  Values are separated by comma, as in ids&#x3D;1,2,3.
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @option opts [String] :query Return all items that matches the specified plain text query.
  # @option opts [String] :search_in Specified query must match either url or title.
  # @return [SeoRecommendationTargetPageList]
  describe 'sites_site_id_seov2_target_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_pages_page_id_competing_content_issues_get
  # Get competing content issues for the target page
  # Get competing content issues for the target page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ContentOptimizationTargetUrlCompetingContentList]
  describe 'sites_site_id_seov2_target_pages_pages_page_id_competing_content_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_pages_page_id_competing_content_issues_type_pages_get
  # Get the competing content issue type for the page
  # Get the competing content issue type for the page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param type The competing content type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :keyword The keyword
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ContentOptimizationTargetUrlCompetingContentPageList]
  describe 'sites_site_id_seov2_target_pages_pages_page_id_competing_content_issues_type_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_pages_page_id_keyword_issues_get
  # Get keyword issues for the page
  # Get keyword issues for the page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ContentOptimizationTargetUrlKeywordIssueList]
  describe 'sites_site_id_seov2_target_pages_pages_page_id_keyword_issues_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_pages_page_id_keyword_occurrences_get
  # Get keyword occurrences for the page
  # Get keyword occurrences for the page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ContentOptimizationTargetUrlOptimizationList]
  describe 'sites_site_id_seov2_target_pages_pages_page_id_keyword_occurrences_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_pages_page_id_keywords_get
  # Get the keywords targeting the page
  # Get the keywords targeting the page
  # @param site_id Id for specific site.
  # @param page_id Id for specific page.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to show when more than one page in paged output.
  # @option opts [Integer] :page_size Number of items/records per page in paged output.
  # @return [ContentOptimizationTargetUrlKeywordList]
  describe 'sites_site_id_seov2_target_pages_pages_page_id_keywords_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for sites_site_id_seov2_target_pages_summary_get
  # Get overall statistics for target pages
  # Get overall statistics for target pages
  # @param site_id Id for specific site.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :activity_plan_id Id for specific activity plan
  # @return [TargetPagesIssuesHighlights]
  describe 'sites_site_id_seov2_target_pages_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
